import numpy as np

INPUT_SIZE = 876
HIDDEN_SIZE1 = 1024
HIDDEN_SIZE2 = 512
HIDDEN_SIZE3 = 256
OUTPUT_SIZE = 1

row_template_layer1_even = np.array(
    [ 1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,
    1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0, -1, -1,  0, -1,
    0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  1,  0, -1,  0,  0,  1,  0, -1,  0,  0,
    -1,  0,  0,  0,  1,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0, -1,
    0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0, -1,  0,  0,
    0,  0,  0, -1,  0, -1,  1,  1,  0,  0,  0, -1,  0,  0, -1,  0, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,  0,  0, -1,
    0,  0,  0,  0,  0, -1, -1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,
    1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1, -1,  0,  0,  1, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,
    0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    -1,  0,  0,  0, -1,  1, -1,  1,  0,  0,  1,  0,  0, -1, -1,  0,  0,
    0,  0,  1,  1,  0,  0,  1,  0,  0,  1,  0, -1,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0, -1,  0, -1,  0, -1,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0, -1,  0,  1,  0,
    0, -1,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0, -1,  1,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  0, -1,
    0,  0,  0,  0, -1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,
    0,  0, -1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,
    0,  0,  0, -1,  1,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0, -1,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0, -1, -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  0,  0,
    -1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  1,  0,  0,  0,
    0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  1,  0,
    0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0, -1,  0,  0,  0,  0,
    1,  0,  0,  0,  0,  1, -1,  0,  0, -1,  0,  0, -1, -1,  0,  0, -1,
    1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,
    -1,  0,  0,  0,  0, -1,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  1,
    0,  0,  0,  1,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0, -1,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  1,  0,  0, -1,
    0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0, -1, -1, -1,  0,  0,  0,  1,  0,  0,  0,  0,
    -1,  0,  0,  0,  0,  1,  1,  0, -1, -1,  0,  0,  0,  0,  0,  0,  1,
    1,  0,  0,  1,  0, -1,  0,  0,  0])

row_template_layer1_odd = np.array([
    0,  0,  0,  0,  0,  0,  0, -1,  0,  1,  0,  0, -1,  0,  0,  0,  0,
    1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    -1,  0,  0,  0,  0,  0,  0,  0, -1,  0, -1,  0,  0, -1,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0, -1, -1,  0,  0,  0,  0, -1,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,  0, -1, -1,  0, -1,  0,
    -1,  1,  0,  0,  0,  0, -1,  0,  0, -1,  0,  1,  0,  0, -1,  1, -1,
    0,  0,  1,  0,  0,  0,  0,  0, -1,  0, -1,  0,  0,  1, -1,  0,  0,
    0,  0,  0,  0,  1,  0,  1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0, -1,  0,  1,  0,  0,  1, -1,  0,  0,  1,  1,  1,
    0,  0,  0,  0,  0,  1,  0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,
    1,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  1,  0, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1, -1,  1,  0,  0, -1,  0,
    -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,
    0,  0,  0,  0,  1,  0,  0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  0,
    -1, -1,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  1, -1,  0,  0,  0,
    0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,
    0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  1, -1,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  1,  0, -1,  0,  0,  1,  1,  0,  0,  0,  0,
    0,  1,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0, -1,  1,  0,  1, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,
    1,  0,  0,  0,  0,  1,  0,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0, -1,  0,  0,  0,
    1,  0,  0,  0,  0,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  0,
    -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,
    0,  0,  0,  0,  1, -1,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,
    0,  0,  0, -1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0, -1,  0,  0, -1,
    0,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,
    1,  0,  0,  0, -1,  0,  0,  0,  0, -1, -1,  0,  1,  1,  0,  0, -1,
    0,  0,  0,  1,  0,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0, -1,  1, -1,  0,  0,
    0,  0,  0,  0,  0,  1,  1,  0, -1, -1,  0,  0,  0,  0, -1,  1,  0,
    0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0, -1,  1,  0, -1,  0,  0,
    0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  0, -1, -1,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  1,  0,
    0,  0,  0,  0,  0,  0, -1,  0,  0,  0, -1,  0,  0,  0, -1,  0,  0,
    1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
    0, -1,  0,  0,  0, -1, -1,  0,  0, -1,  0,  0,  0,  1,  0,  1,  0,
    0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,
    0,  0,  1,  0,  0,  0,  1,  0,  0,  1, -1, -1,  0,  0, -1,  0,  1,
    0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0,  0, -1, -1,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  1, -1,  0,  0,  0,  1, -1,  0,  1,  0,  1,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0, -1,  0,  0, -1,  0,  0, -1,  0,  0,  0,  0,
    1,  0,  1,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,
    1,  0,  0,  1,  1, -1,  0,  1,  0,  0,  0,  0,  0,  0, -1,  0,  0,
    0,  1,  0,  0, -1,  0,  1,  0, -1])

w1 = np.zeros((HIDDEN_SIZE1, INPUT_SIZE))
for i in range(HIDDEN_SIZE1):
    if i % 2 == 0:
        w1[i] = row_template_layer1_even
    else:
        w1[i] = row_template_layer1_odd
b1 = np.ones(HIDDEN_SIZE1)

row_template_layer2_even = np.array([
    1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,
    1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0, -1, -1,  0, -1,
    0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  1,  0, -1,  0,  0,  1,  0, -1,  0,  0,
    -1,  0,  0,  0,  1,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0, -1,
    0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0, -1,  0,  0,
    0,  0,  0, -1,  0, -1,  1,  1,  0,  0,  0, -1,  0,  0, -1,  0, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,  0,  0, -1,
    0,  0,  0,  0,  0, -1, -1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,
    1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1, -1,  0,  0,  1, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,
    0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    -1,  0,  0,  0, -1,  1, -1,  1,  0,  0,  1,  0,  0, -1, -1,  0,  0,
    0,  0,  1,  1,  0,  0,  1,  0,  0,  1,  0, -1,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0, -1,  0, -1,  0, -1,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0, -1,  0,  1,  0,
    0, -1,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0, -1,  1,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  0, -1,
    0,  0,  0,  0, -1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,
    0,  0, -1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,
    0,  0,  0, -1,  1,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0, -1,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0, -1, -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  0,  0,
    -1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  1,  0,  0,  0,
    0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  1,  0,
    0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0, -1,  0,  0,  0,  0,
    1,  0,  0,  0,  0,  1, -1,  0,  0, -1,  0,  0, -1, -1,  0,  0, -1,
    1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,
    -1,  0,  0,  0,  0, -1,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  1,
    0,  0,  0,  1,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0, -1,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  1,  0,  0, -1,
    0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0, -1, -1, -1,  0,  0,  0,  1,  0,  0,  0,  0,
    -1,  0,  0,  0,  0,  1,  1,  0, -1, -1,  0,  0,  0,  0,  0,  0,  1,
    1,  0,  0,  1,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,
    1,  0,  0,  0, -1,  0,  0,  0,  0,  1,  0,  1,  0, -1,  0,  0, -1,
    0,  0,  1,  0,  0,  0,  0,  0, -1, -1,  0,  1,  0,  0, -1,  1,  0,
    0,  0, -1,  0, -1,  0,  0,  0,  1,  1,  0,  0,  0,  1,  0, -1,  1,
    0,  0,  0,  1,  0,  0, -1,  1,  0,  0,  0,  0, -1,  0,  1,  0,  1,
    0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0, -1,
    0,  0,  0,  0,  1, -1,  0,  0,  1,  1,  0,  0,  1,  0, -1, -1,  0,
    -1,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0, -1,  0,  0,  0, -1,
    0,  1,  0,  0])

row_template_layer2_odd = np.array([
    0,  0,  0,  0,  0,  0,  0, -1,  0,  1,  0,  0, -1,  0,  0,  0,  0,
    1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    -1,  0,  0,  0,  0,  0,  0,  0, -1,  0, -1,  0,  0, -1,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0, -1, -1,  0,  0,  0,  0, -1,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,  0, -1, -1,  0, -1,  0,
    -1,  1,  0,  0,  0,  0, -1,  0,  0, -1,  0,  1,  0,  0, -1,  1, -1,
    0,  0,  1,  0,  0,  0,  0,  0, -1,  0, -1,  0,  0,  1, -1,  0,  0,
    0,  0,  0,  0,  1,  0,  1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0, -1,  0,  1,  0,  0,  1, -1,  0,  0,  1,  1,  1,
    0,  0,  0,  0,  0,  1,  0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,
    1,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  1,  0, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1, -1,  1,  0,  0, -1,  0,
    -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,
    0,  0,  0,  0,  1,  0,  0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  0,
    -1, -1,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  1, -1,  0,  0,  0,
    0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,
    0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  1, -1,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  1,  0, -1,  0,  0,  1,  1,  0,  0,  0,  0,
    0,  1,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0, -1,  1,  0,  1, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,
    1,  0,  0,  0,  0,  1,  0,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0, -1,  0,  0,  0,
    1,  0,  0,  0,  0,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  0,
    -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,
    0,  0,  0,  0,  1, -1,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,
    0,  0,  0, -1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0, -1,  0,  0, -1,
    0,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,
    1,  0,  0,  0, -1,  0,  0,  0,  0, -1, -1,  0,  1,  1,  0,  0, -1,
    0,  0,  0,  1,  0,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0, -1,  1, -1,  0,  0,
    0,  0,  0,  0,  0,  1,  1,  0, -1, -1,  0,  0,  0,  0, -1,  1,  0,
    0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0, -1,  1,  0, -1,  0,  0,
    0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  0, -1, -1,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  1,  0,
    0,  0,  0,  0,  0,  0, -1,  0,  0,  0, -1,  0,  0,  0, -1,  0,  0,
    1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
    0, -1,  0,  0,  0, -1, -1,  0,  0, -1,  0,  0,  0,  1,  0,  1,  0,
    0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,
    0,  0,  1,  0,  0,  0,  1,  0,  0,  1, -1, -1,  0,  0, -1,  0,  1,
    0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0,  0, -1, -1,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  1, -1,  0,  0,  0,  1, -1,  0,  1,  0,  1,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0, -1,  0,  0, -1,  0,  0, -1,  0,  0,  0,  0,
    1,  0,  1,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,
    1,  0,  0,  1,  1, -1,  0,  1,  0,  0,  0,  0,  0,  0, -1,  0,  0,
    0,  1,  0,  0, -1,  0,  1,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,
    0, -1,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0, -1,  1,  0,  1,  0,
    0,  0,  0,  1,  0,  1,  0,  0,  0, -1,  1,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    1,  0,  0,  0,  1,  0,  0,  0,  0,  0, -1,  0,  1,  0,  0,  0,  1,
    0,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,
    0,  1, -1, -1,  0,  1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,
    0,  0,  0,  0])

w2 = np.zeros((HIDDEN_SIZE2, HIDDEN_SIZE1))
for i in range(HIDDEN_SIZE2):
    if i % 2 == 0:
        w2[i] = row_template_layer2_even
    else:
        w2[i] = row_template_layer2_odd
b2 = np.ones(HIDDEN_SIZE2)

row_template_layer3_even = np.array([
    1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,
    1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0, -1, -1,  0, -1,
    0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  1,  0, -1,  0,  0,  1,  0, -1,  0,  0,
    -1,  0,  0,  0,  1,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0, -1,
    0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0, -1,  0,  0,
    0,  0,  0, -1,  0, -1,  1,  1,  0,  0,  0, -1,  0,  0, -1,  0, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,  0,  0, -1,
    0,  0,  0,  0,  0, -1, -1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,
    1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1, -1,  0,  0,  1, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,
    0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    -1,  0,  0,  0, -1,  1, -1,  1,  0,  0,  1,  0,  0, -1, -1,  0,  0,
    0,  0,  1,  1,  0,  0,  1,  0,  0,  1,  0, -1,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0, -1,  0, -1,  0, -1,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0, -1,  0,  1,  0,
    0, -1,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0, -1,  1,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  0, -1,
    0,  0,  0,  0, -1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,
    0,  0, -1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,
    0,  0,  0, -1,  1,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0, -1,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0])

row_template_layer3_odd = np.array([
    0,  0,  0,  0,  0,  0,  0, -1,  0,  1,  0,  0, -1,  0,  0,  0,  0,
    1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    -1,  0,  0,  0,  0,  0,  0,  0, -1,  0, -1,  0,  0, -1,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0, -1, -1,  0,  0,  0,  0, -1,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  1,
    0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,  0, -1, -1,  0, -1,  0,
    -1,  1,  0,  0,  0,  0, -1,  0,  0, -1,  0,  1,  0,  0, -1,  1, -1,
    0,  0,  1,  0,  0,  0,  0,  0, -1,  0, -1,  0,  0,  1, -1,  0,  0,
    0,  0,  0,  0,  1,  0,  1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0, -1,  0,  1,  0,  0,  1, -1,  0,  0,  1,  1,  1,
    0,  0,  0,  0,  0,  1,  0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,
    1,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,  1,  0, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1, -1,  1,  0,  0, -1,  0,
    -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,
    0,  0,  0,  0,  1,  0,  0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  0,
    -1, -1,  0,  0, -1,  0,  0,  0,  0,  0,  0,  0,  1, -1,  0,  0,  0,
    0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,
    0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  1, -1,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  1,  0, -1,  0,  0,  1,  1,  0,  0,  0,  0,
    0,  1,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0, -1,  1,  0,  1, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,
    1,  0,  0,  0,  0,  1,  0,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0, -1,  0,  0,  0,
    1,  0,  0,  0,  0,  0,  0,  0, -1,  0, -1,  0,  0,  0,  0,  0,  0,
    -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,
    0,  0,  0,  0,  1, -1,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0,  0,
    0,  0,  0, -1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0, -1,  0,  0, -1,
    0,  0])

w3 = np.zeros((HIDDEN_SIZE3, HIDDEN_SIZE2))
for i in range(HIDDEN_SIZE3):
    if i % 2 == 0:
        w3[i] = row_template_layer3_even
    else:
        w3[i] = row_template_layer3_odd
b3 = np.ones(HIDDEN_SIZE3)


w_out = np.array([[
    1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,
    1,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0, -1, -1,  0, -1,
    0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  1,  0,  0,  0,  0,  1,  0, -1,  0,  0,  1,  0, -1,  0,  0,
    -1,  0,  0,  0,  1,  0,  0,  0,  0,  0, -1,  0,  0,  0,  0,  0, -1,
    0,  0,  0,  0, -1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0, -1,  0,  0,
    0,  0,  0, -1,  0, -1,  1,  1,  0,  0,  0, -1,  0,  0, -1,  0, -1,
    0,  0,  0,  0,  0,  0,  0,  0,  0, -1,  0,  0,  0,  1,  0,  0, -1,
    0,  0,  0,  0,  0, -1, -1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,
    1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,
    0]])
b_out = np.array([1])

def layer(input_feature, weights_transpose, bias):
    """
    input feature: 1D array (p, )
    weights: 2D array, feature * first row; feature * second row, etc... (q, p)
    bias: 1D array, same dimension as input feature (q, )

    return: 1D array (q, )
    """
    assert input_feature.shape[0] == weights_transpose.shape[1] and \
        weights_transpose.shape[0] == bias.shape[0]
        
    out_size = weights_transpose.shape[0]

    output_feature = np.zeros(out_size)
    for i in range(out_size):
        output_feature[i] = np.dot(input_feature, weights_transpose[i]) + bias[i]

    return output_feature

def reorder_outputs_1024(input_feature):
    """
    Input: 1D array (p, )
    from correct order to possibly incorrect one
    8 -> 4 in the first half and 4 in the second half
    """
    output = np.zeros(input_feature.shape)
    mid = int(input_feature.shape[0] / 2)
    for i in range(int(input_feature.shape[0] / 8)):
        local = input_feature[i * 8: (i + 1) * 8]
        output[i * 4: (i + 1) * 4] = local[:4]
        output[mid + i * 4: mid + (i + 1) * 4] = local[4:]
    
    return output

def complete_NN(input_feature):

    r1 = layer(input_feature, w1, b1)
    r1 = reorder_outputs_1024(r1)
    r2 = layer(r1, w2, b2)
    r3 = layer(r2, w3, b3)
    result = layer(r3, w_out, b_out)

    return result

if __name__ == "__main__":
    
    # PLRAM_template_even = [0, -1, 0, -1, 0, 0, -1, 0]
    # PLRAM_template_odd = [-1, 1, 0, 0, 0, 1, -1, 0]
    PLRAM_template_even = [1, 1, 1, 1, 1, 1, 1, 1]
    PLRAM_template_odd = [1, 1, 1, 1, 1, 1, 1, 1]
    # PLRAM_template_even = [0, 0, 0, 0, 0, 0, 0, 0]
    # PLRAM_template_odd = [0, 0, 0, 0, 0, 0, 0, 0]
    # PLRAM_template_even = [-1, -1, -1, -1, -1, -1, -1, -1]
    # PLRAM_template_odd = [-1, -1, -1, -1, -1, -1, -1, -1]
    concatenated_feature_even = np.array([1] * (876 - 32 * 4) + PLRAM_template_even * 16)
    concatenated_feature_odd = np.array([1] * (876 - 32 * 4) + PLRAM_template_odd * 16)

    result_even = complete_NN(concatenated_feature_even)
    result_odd = complete_NN(concatenated_feature_odd)

    print("Even results: {}\nOdd results: {}".format(result_even, result_odd))
    # a =  [[1,1,1], [0,0,0]]
    # b = [[1,1,1], [0,0,0,0]]
    # for i in a:
    #     if i in b:
    #         print(i)

    if True:
        PLRAM_template_old = [[]]
        for i in range(8):
            new_PLRAM_template = []
            for current_array in PLRAM_template_old:
                new_PLRAM_template.append(current_array.copy() + [0])
                new_PLRAM_template.append(current_array.copy() + [1])
                new_PLRAM_template.append(current_array.copy() + [-1])
            PLRAM_template_old = new_PLRAM_template

        PLRAM_template_all = PLRAM_template_old
        # print(PLRAM_template_all, '\n', len(PLRAM_template_all))

        worked_plram_template1 = []
        for plram_template in PLRAM_template_all:
            concatenated_feature = np.array([1] * (876 - 32 * 4) + plram_template * 16)
            result = complete_NN(concatenated_feature)
            if result == 10695:
                print("{} -> 10695", plram_template)
                worked_plram_template1.append(plram_template)

        worked_plram_template2 = []
        # PLRAM_template = [0, -1, 0, -1, 0, 0, -1, 0] # even 4307, correct
        for plram_template in PLRAM_template_all:
            concatenated_feature = np.array([2] * (876 - 32 * 4) + plram_template * 16)
            result = complete_NN(concatenated_feature)
            if result == 13791:
                print("{} -> 13791", plram_template)
                worked_plram_template2.append(plram_template)
        
        for plram_template in worked_plram_template1:
            if plram_template in worked_plram_template2:
                print("Same vector: ->", plram_template)


