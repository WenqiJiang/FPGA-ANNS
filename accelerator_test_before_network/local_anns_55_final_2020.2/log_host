make: Circular host <- host dependency dropped.
g++ -o host includes/xcl2/xcl2.cpp src/host.cpp -I/opt/xilinx/xrt/include -I/opt/Xilinx/Vivado/2020.2/include -Wall -O0 -g -std=c++1y -I./includes/xcl2 -fmessage-length=0 -L/opt/xilinx/xrt/lib -lOpenCL -pthread -lrt -lstdc++ 
In file included from src/host.hpp:26:0,
                 from src/host.cpp:1:
./includes/xcl2/xcl2.hpp:26:0: warning: "OCL_CHECK" redefined
 #define OCL_CHECK(error, call)                                                                   \
 
In file included from src/host.cpp:1:0:
src/host.hpp:8:0: note: this is the location of the previous definition
 #define OCL_CHECK(error,call)                                       \
 
src/host.cpp: In function ‘int main(int, char**)’:
src/host.cpp:116:14: warning: unused variable ‘fileBufSize’ [-Wunused-variable]
     unsigned fileBufSize;
              ^~~~~~~~~~~
In file included from /opt/Xilinx/Vivado/2020.2/include/ap_common.h:641:0,
                 from /opt/Xilinx/Vivado/2020.2/include/ap_int.h:54,
                 from src/types.hpp:3,
                 from src/host.hpp:16,
                 from src/host.cpp:1:
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h: In instantiation of ‘void ap_private<_AP_W, _AP_S, true>::clearUnusedBits() volatile [with int _AP_W = 32; bool _AP_S = true]’:
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h:1647:3:   required from ‘ap_private<_AP_W, _AP_S, true>::ap_private(int) [with int _AP_W = 32; bool _AP_S = true]’
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h:4665:3:   required from ‘ap_private<_AP_W, _AP_S, false>& ap_private<_AP_W, _AP_S, false>::operator=(int) [with int _AP_W = 512; bool _AP_S = false]’
/opt/Xilinx/Vivado/2020.2/include/ap_int.h:301:3:   required from ‘ap_uint<_AP_W>::ap_uint(int) [with int _AP_W = 512]’
src/host.cpp:120:100:   required from here
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h:2144:28: warning: enum constant in boolean context [-Wint-in-bool-context]
             : (excess_bits ? (((uint64_t)VAL) << (excess_bits)) >> (excess_bits)
               ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            : (uint64_t)VAL));
                            ~~~~~~~~~~~~~~~~
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h: In instantiation of ‘void ap_private<_AP_W, _AP_S, true>::clearUnusedBits() volatile [with int _AP_W = 32; bool _AP_S = false]’:
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h:1426:20:   required from ‘ap_private<_AP_W, _AP_S>& ap_private<_AP_W, _AP_S, true>::operator=(const ap_private<_AP_W1, _AP_S1>&) [with int _AP_W1 = 64; bool _AP_S1 = false; int _AP_W = 32; bool _AP_S = false]’
/opt/Xilinx/Vivado/2020.2/include/ap_int_base.h:364:13:   required from ‘ap_int_base<_AP_W, _AP_S>::ap_int_base(const ap_range_ref<_AP_W2, _AP_S2>&) [with int _AP_W2 = 64; bool _AP_S2 = false; int _AP_W = 32; bool _AP_S = false]’
/opt/Xilinx/Vivado/2020.2/include/ap_int.h:237:69:   required from ‘ap_uint<_AP_W>::ap_uint(const ap_range_ref<_AP_W2, _AP_S2>&) [with int _AP_W2 = 64; bool _AP_S2 = false; int _AP_W = 32]’
src/host.cpp:771:53:   required from here
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h:2144:28: warning: enum constant in boolean context [-Wint-in-bool-context]
In file included from /opt/Xilinx/Vivado/2020.2/include/ap_common.h:641:0,
                 from /opt/Xilinx/Vivado/2020.2/include/ap_int.h:54,
                 from src/types.hpp:3,
                 from src/host.hpp:16,
                 from src/host.cpp:1:
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h: In instantiation of ‘void ap_private<_AP_W, _AP_S, false>::cpSext(const ap_private<_AP_W1, _AP_S1>&) [with int _AP_W1 = 32; bool _AP_S1 = true; int _AP_W = 512; bool _AP_S = false]’:
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h:5335:13:   required from ‘void ap_private<_AP_W, _AP_S, false>::cpSextOrTrunc(const ap_private<_AP_W1, _AP_S1>&) [with int _AP_W1 = 32; bool _AP_S1 = true; int _AP_W = 512; bool _AP_S = false]’
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h:4598:20:   required from ‘ap_private<_AP_W, _AP_S, false>& ap_private<_AP_W, _AP_S, false>::operator=(const ap_private<_AP_W1, _AP_S1>&) [with int _AP_W1 = 32; bool _AP_S1 = true; int _AP_W = 512; bool _AP_S = false]’
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h:4665:3:   required from ‘ap_private<_AP_W, _AP_S, false>& ap_private<_AP_W, _AP_S, false>::operator=(int) [with int _AP_W = 512; bool _AP_S = false]’
/opt/Xilinx/Vivado/2020.2/include/ap_int.h:301:3:   required from ‘ap_uint<_AP_W>::ap_uint(int) [with int _AP_W = 512]’
src/host.cpp:120:100:   required from here
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h:5292:45: warning: enum constant in boolean context [-Wint-in-bool-context]
       static const uint64_t mask = wordBits ? (~0ULL << (wordBits)) : 0ULL;
                                    ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/opt/Xilinx/Vivado/2020.2/include/etc/ap_private.h:5300:43: warning: enum constant in boolean context [-Wint-in-bool-context]
     static const uint64_t mask = wordBits ? (~0ULL << (wordBits)) : 0ULL;
                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
